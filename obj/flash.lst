   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"flash.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.bss.uxFlashTaskNumber,"aw",%nobits
  20              		.align	2
  23              	uxFlashTaskNumber:
  24 0000 00000000 		.space	4
  25              		.section	.rodata
  26              		.align	2
  27              	.LC0:
  28 0000 4C454478 		.ascii	"LEDx\000"
  28      00
  29 0005 000000   		.section	.text.vStartLEDFlashTasks,"ax",%progbits
  30              		.align	2
  31              		.global	vStartLEDFlashTasks
  32              		.thumb
  33              		.thumb_func
  35              	vStartLEDFlashTasks:
  36              	.LFB110:
  37              		.file 1 "App/Common/Minimal/flash.c"
   1:App/Common/Minimal/flash.c **** /*
   2:App/Common/Minimal/flash.c ****     FreeRTOS V7.5.3 - Copyright (C) 2013 Real Time Engineers Ltd. 
   3:App/Common/Minimal/flash.c ****     All rights reserved
   4:App/Common/Minimal/flash.c **** 
   5:App/Common/Minimal/flash.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:App/Common/Minimal/flash.c **** 
   7:App/Common/Minimal/flash.c ****     ***************************************************************************
   8:App/Common/Minimal/flash.c ****      *                                                                       *
   9:App/Common/Minimal/flash.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  10:App/Common/Minimal/flash.c ****      *    robust, strictly quality controlled, supported, and cross          *
  11:App/Common/Minimal/flash.c ****      *    platform software that has become a de facto standard.             *
  12:App/Common/Minimal/flash.c ****      *                                                                       *
  13:App/Common/Minimal/flash.c ****      *    Help yourself get started quickly and support the FreeRTOS         *
  14:App/Common/Minimal/flash.c ****      *    project by purchasing a FreeRTOS tutorial book, reference          *
  15:App/Common/Minimal/flash.c ****      *    manual, or both from: http://www.FreeRTOS.org/Documentation        *
  16:App/Common/Minimal/flash.c ****      *                                                                       *
  17:App/Common/Minimal/flash.c ****      *    Thank you!                                                         *
  18:App/Common/Minimal/flash.c ****      *                                                                       *
  19:App/Common/Minimal/flash.c ****     ***************************************************************************
  20:App/Common/Minimal/flash.c **** 
  21:App/Common/Minimal/flash.c ****     This file is part of the FreeRTOS distribution.
  22:App/Common/Minimal/flash.c **** 
  23:App/Common/Minimal/flash.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  24:App/Common/Minimal/flash.c ****     the terms of the GNU General Public License (version 2) as published by the
  25:App/Common/Minimal/flash.c ****     Free Software Foundation >>!AND MODIFIED BY!<< the FreeRTOS exception.
  26:App/Common/Minimal/flash.c **** 
  27:App/Common/Minimal/flash.c ****     >>! NOTE: The modification to the GPL is included to allow you to distribute
  28:App/Common/Minimal/flash.c ****     >>! a combined work that includes FreeRTOS without being obliged to provide
  29:App/Common/Minimal/flash.c ****     >>! the source code for proprietary components outside of the FreeRTOS
  30:App/Common/Minimal/flash.c ****     >>! kernel.
  31:App/Common/Minimal/flash.c **** 
  32:App/Common/Minimal/flash.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  33:App/Common/Minimal/flash.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  34:App/Common/Minimal/flash.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available from the following
  35:App/Common/Minimal/flash.c ****     link: http://www.freertos.org/a00114.html
  36:App/Common/Minimal/flash.c **** 
  37:App/Common/Minimal/flash.c ****     1 tab == 4 spaces!
  38:App/Common/Minimal/flash.c **** 
  39:App/Common/Minimal/flash.c ****     ***************************************************************************
  40:App/Common/Minimal/flash.c ****      *                                                                       *
  41:App/Common/Minimal/flash.c ****      *    Having a problem?  Start by reading the FAQ "My application does   *
  42:App/Common/Minimal/flash.c ****      *    not run, what could be wrong?"                                     *
  43:App/Common/Minimal/flash.c ****      *                                                                       *
  44:App/Common/Minimal/flash.c ****      *    http://www.FreeRTOS.org/FAQHelp.html                               *
  45:App/Common/Minimal/flash.c ****      *                                                                       *
  46:App/Common/Minimal/flash.c ****     ***************************************************************************
  47:App/Common/Minimal/flash.c **** 
  48:App/Common/Minimal/flash.c ****     http://www.FreeRTOS.org - Documentation, books, training, latest versions,
  49:App/Common/Minimal/flash.c ****     license and Real Time Engineers Ltd. contact details.
  50:App/Common/Minimal/flash.c **** 
  51:App/Common/Minimal/flash.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  52:App/Common/Minimal/flash.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  53:App/Common/Minimal/flash.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  54:App/Common/Minimal/flash.c **** 
  55:App/Common/Minimal/flash.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd license FreeRTOS to High
  56:App/Common/Minimal/flash.c ****     Integrity Systems to sell under the OpenRTOS brand.  Low cost OpenRTOS
  57:App/Common/Minimal/flash.c ****     licenses offer ticketed support, indemnification and middleware.
  58:App/Common/Minimal/flash.c **** 
  59:App/Common/Minimal/flash.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  60:App/Common/Minimal/flash.c ****     engineered and independently SIL3 certified version for use in safety and
  61:App/Common/Minimal/flash.c ****     mission critical applications that require provable dependability.
  62:App/Common/Minimal/flash.c **** 
  63:App/Common/Minimal/flash.c ****     1 tab == 4 spaces!
  64:App/Common/Minimal/flash.c **** */
  65:App/Common/Minimal/flash.c **** 
  66:App/Common/Minimal/flash.c **** /**
  67:App/Common/Minimal/flash.c ****  * This version of flash .c is for use on systems that have limited stack space
  68:App/Common/Minimal/flash.c ****  * and no display facilities.  The complete version can be found in the 
  69:App/Common/Minimal/flash.c ****  * Demo/Common/Full directory.
  70:App/Common/Minimal/flash.c ****  * 
  71:App/Common/Minimal/flash.c ****  * Three tasks are created, each of which flash an LED at a different rate.  The first 
  72:App/Common/Minimal/flash.c ****  * LED flashes every 200ms, the second every 400ms, the third every 600ms.
  73:App/Common/Minimal/flash.c ****  *
  74:App/Common/Minimal/flash.c ****  * The LED flash tasks provide instant visual feedback.  They show that the scheduler 
  75:App/Common/Minimal/flash.c ****  * is still operational.
  76:App/Common/Minimal/flash.c ****  *
  77:App/Common/Minimal/flash.c ****  */
  78:App/Common/Minimal/flash.c **** 
  79:App/Common/Minimal/flash.c **** 
  80:App/Common/Minimal/flash.c **** #include <stdlib.h>
  81:App/Common/Minimal/flash.c **** 
  82:App/Common/Minimal/flash.c **** /* Scheduler include files. */
  83:App/Common/Minimal/flash.c **** #include "FreeRTOS.h"
  84:App/Common/Minimal/flash.c **** #include "task.h"
  85:App/Common/Minimal/flash.c **** 
  86:App/Common/Minimal/flash.c **** /* Demo program include files. */
  87:App/Common/Minimal/flash.c **** #include "partest.h"
  88:App/Common/Minimal/flash.c **** #include "flash.h"
  89:App/Common/Minimal/flash.c **** 
  90:App/Common/Minimal/flash.c **** #define ledSTACK_SIZE		configMINIMAL_STACK_SIZE
  91:App/Common/Minimal/flash.c **** #define ledNUMBER_OF_LEDS	( 3 )
  92:App/Common/Minimal/flash.c **** #define ledFLASH_RATE_BASE	( ( portTickType ) 333 )
  93:App/Common/Minimal/flash.c **** 
  94:App/Common/Minimal/flash.c **** /* Variable used by the created tasks to calculate the LED number to use, and
  95:App/Common/Minimal/flash.c **** the rate at which they should flash the LED. */
  96:App/Common/Minimal/flash.c **** static volatile unsigned portBASE_TYPE uxFlashTaskNumber = 0;
  97:App/Common/Minimal/flash.c **** 
  98:App/Common/Minimal/flash.c **** /* The task that is created three times. */
  99:App/Common/Minimal/flash.c **** static portTASK_FUNCTION_PROTO( vLEDFlashTask, pvParameters );
 100:App/Common/Minimal/flash.c **** 
 101:App/Common/Minimal/flash.c **** /*-----------------------------------------------------------*/
 102:App/Common/Minimal/flash.c **** 
 103:App/Common/Minimal/flash.c **** void vStartLEDFlashTasks( unsigned portBASE_TYPE uxPriority )
 104:App/Common/Minimal/flash.c **** {
  38              		.loc 1 104 0
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 16
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42 0000 80B5     		push	{r7, lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 8
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0002 88B0     		sub	sp, sp, #32
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 40
  50 0004 04AF     		add	r7, sp, #16
  51              	.LCFI2:
  52              		.cfi_def_cfa 7, 24
  53 0006 7860     		str	r0, [r7, #4]
 105:App/Common/Minimal/flash.c **** signed portBASE_TYPE xLEDTask;
 106:App/Common/Minimal/flash.c **** 
 107:App/Common/Minimal/flash.c **** 	/* Create the three tasks. */
 108:App/Common/Minimal/flash.c **** 	//for( xLEDTask = 0; xLEDTask < ledNUMBER_OF_LEDS; ++xLEDTask )
 109:App/Common/Minimal/flash.c **** 	for( xLEDTask = 0; xLEDTask < 3; ++xLEDTask )
  54              		.loc 1 109 0
  55 0008 4FF00003 		mov	r3, #0
  56 000c FB60     		str	r3, [r7, #12]
  57 000e 1CE0     		b	.L2
  58              	.L3:
 110:App/Common/Minimal/flash.c **** 	{
 111:App/Common/Minimal/flash.c **** 		/* Spawn the task. */
 112:App/Common/Minimal/flash.c **** 		xTaskCreate( vLEDFlashTask, ( signed char * ) "LEDx", ledSTACK_SIZE, NULL, uxPriority, ( xTaskHan
  59              		.loc 1 112 0 discriminator 2
  60 0010 7B68     		ldr	r3, [r7, #4]
  61 0012 0093     		str	r3, [sp, #0]
  62 0014 4FF00003 		mov	r3, #0
  63 0018 0193     		str	r3, [sp, #4]
  64 001a 4FF00003 		mov	r3, #0
  65 001e 0293     		str	r3, [sp, #8]
  66 0020 4FF00003 		mov	r3, #0
  67 0024 0393     		str	r3, [sp, #12]
  68 0026 40F20000 		movw	r0, #:lower16:vLEDFlashTask
  69 002a C0F20000 		movt	r0, #:upper16:vLEDFlashTask
  70 002e 40F20001 		movw	r1, #:lower16:.LC0
  71 0032 C0F20001 		movt	r1, #:upper16:.LC0
  72 0036 4FF08202 		mov	r2, #130
  73 003a 4FF00003 		mov	r3, #0
  74 003e FFF7FEFF 		bl	xTaskGenericCreate
 109:App/Common/Minimal/flash.c **** 	for( xLEDTask = 0; xLEDTask < 3; ++xLEDTask )
  75              		.loc 1 109 0 discriminator 2
  76 0042 FB68     		ldr	r3, [r7, #12]
  77 0044 03F10103 		add	r3, r3, #1
  78 0048 FB60     		str	r3, [r7, #12]
  79              	.L2:
 109:App/Common/Minimal/flash.c **** 	for( xLEDTask = 0; xLEDTask < 3; ++xLEDTask )
  80              		.loc 1 109 0 is_stmt 0 discriminator 1
  81 004a FB68     		ldr	r3, [r7, #12]
  82 004c 022B     		cmp	r3, #2
  83 004e DFDD     		ble	.L3
 113:App/Common/Minimal/flash.c **** 	}
 114:App/Common/Minimal/flash.c **** }
  84              		.loc 1 114 0 is_stmt 1
  85 0050 07F11007 		add	r7, r7, #16
  86 0054 BD46     		mov	sp, r7
  87 0056 80BD     		pop	{r7, pc}
  88              		.cfi_endproc
  89              	.LFE110:
  91              		.section	.text.vLEDFlashTask,"ax",%progbits
  92              		.align	2
  93              		.thumb
  94              		.thumb_func
  96              	vLEDFlashTask:
  97              	.LFB111:
 115:App/Common/Minimal/flash.c **** /*-----------------------------------------------------------*/
 116:App/Common/Minimal/flash.c **** 
 117:App/Common/Minimal/flash.c **** static portTASK_FUNCTION( vLEDFlashTask, pvParameters )
 118:App/Common/Minimal/flash.c **** {
  98              		.loc 1 118 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 24
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102 0000 80B5     		push	{r7, lr}
 103              	.LCFI3:
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0002 86B0     		sub	sp, sp, #24
 108              	.LCFI4:
 109              		.cfi_def_cfa_offset 32
 110 0004 00AF     		add	r7, sp, #0
 111              	.LCFI5:
 112              		.cfi_def_cfa_register 7
 113 0006 7860     		str	r0, [r7, #4]
 119:App/Common/Minimal/flash.c **** portTickType xFlashRate, xLastFlashTime;
 120:App/Common/Minimal/flash.c **** unsigned portBASE_TYPE uxLED;
 121:App/Common/Minimal/flash.c **** 
 122:App/Common/Minimal/flash.c **** 	/* The parameters are not used. */
 123:App/Common/Minimal/flash.c **** 	( void ) pvParameters;
 124:App/Common/Minimal/flash.c **** 
 125:App/Common/Minimal/flash.c **** 	/* Calculate the LED and flash rate. */
 126:App/Common/Minimal/flash.c **** 	portENTER_CRITICAL();
 114              		.loc 1 126 0
 115 0008 FFF7FEFF 		bl	vPortEnterCritical
 127:App/Common/Minimal/flash.c **** 	{
 128:App/Common/Minimal/flash.c **** 		/* See which of the eight LED's we should use. */
 129:App/Common/Minimal/flash.c **** 		uxLED = uxFlashTaskNumber;
 116              		.loc 1 129 0
 117 000c 40F20003 		movw	r3, #:lower16:uxFlashTaskNumber
 118 0010 C0F20003 		movt	r3, #:upper16:uxFlashTaskNumber
 119 0014 1B68     		ldr	r3, [r3, #0]
 120 0016 7B61     		str	r3, [r7, #20]
 130:App/Common/Minimal/flash.c **** 
 131:App/Common/Minimal/flash.c **** 		/* Update so the next task uses the next LED. */
 132:App/Common/Minimal/flash.c **** 		uxFlashTaskNumber++;
 121              		.loc 1 132 0
 122 0018 40F20003 		movw	r3, #:lower16:uxFlashTaskNumber
 123 001c C0F20003 		movt	r3, #:upper16:uxFlashTaskNumber
 124 0020 1B68     		ldr	r3, [r3, #0]
 125 0022 03F10102 		add	r2, r3, #1
 126 0026 40F20003 		movw	r3, #:lower16:uxFlashTaskNumber
 127 002a C0F20003 		movt	r3, #:upper16:uxFlashTaskNumber
 128 002e 1A60     		str	r2, [r3, #0]
 133:App/Common/Minimal/flash.c **** 	}
 134:App/Common/Minimal/flash.c **** 	portEXIT_CRITICAL();
 129              		.loc 1 134 0
 130 0030 FFF7FEFF 		bl	vPortExitCritical
 135:App/Common/Minimal/flash.c **** 
 136:App/Common/Minimal/flash.c **** 	xFlashRate = ledFLASH_RATE_BASE + ( ledFLASH_RATE_BASE * ( portTickType ) uxLED );
 131              		.loc 1 136 0
 132 0034 7B69     		ldr	r3, [r7, #20]
 133 0036 03F10103 		add	r3, r3, #1
 134 003a 40F24D12 		movw	r2, #333
 135 003e 02FB03F3 		mul	r3, r2, r3
 136 0042 3B61     		str	r3, [r7, #16]
 137:App/Common/Minimal/flash.c **** 	xFlashRate /= portTICK_RATE_MS;
 138:App/Common/Minimal/flash.c **** 
 139:App/Common/Minimal/flash.c **** 	/* We will turn the LED on and off again in the delay period, so each
 140:App/Common/Minimal/flash.c **** 	delay is only half the total period. */
 141:App/Common/Minimal/flash.c **** 	xFlashRate /= ( portTickType ) 2;
 137              		.loc 1 141 0
 138 0044 3B69     		ldr	r3, [r7, #16]
 139 0046 4FEA5303 		lsr	r3, r3, #1
 140 004a 3B61     		str	r3, [r7, #16]
 142:App/Common/Minimal/flash.c **** 
 143:App/Common/Minimal/flash.c **** 	/* We need to initialise xLastFlashTime prior to the first call to 
 144:App/Common/Minimal/flash.c **** 	vTaskDelayUntil(). */
 145:App/Common/Minimal/flash.c **** 	xLastFlashTime = xTaskGetTickCount();
 141              		.loc 1 145 0
 142 004c FFF7FEFF 		bl	xTaskGetTickCount
 143 0050 0346     		mov	r3, r0
 144 0052 FB60     		str	r3, [r7, #12]
 145              	.L5:
 146:App/Common/Minimal/flash.c **** 
 147:App/Common/Minimal/flash.c **** 	for(;;)
 148:App/Common/Minimal/flash.c **** 	{
 149:App/Common/Minimal/flash.c **** 		/* Delay for half the flash period then turn the LED on. */
 150:App/Common/Minimal/flash.c **** 		vTaskDelayUntil( &xLastFlashTime, xFlashRate );
 146              		.loc 1 150 0 discriminator 1
 147 0054 07F10C03 		add	r3, r7, #12
 148 0058 1846     		mov	r0, r3
 149 005a 3969     		ldr	r1, [r7, #16]
 150 005c FFF7FEFF 		bl	vTaskDelayUntil
 151:App/Common/Minimal/flash.c **** 		vParTestToggleLED( uxLED );
 151              		.loc 1 151 0 discriminator 1
 152 0060 7869     		ldr	r0, [r7, #20]
 153 0062 FFF7FEFF 		bl	vParTestToggleLED
 152:App/Common/Minimal/flash.c **** 
 153:App/Common/Minimal/flash.c **** 		/* Delay for half the flash period then turn the LED off. */
 154:App/Common/Minimal/flash.c **** 		vTaskDelayUntil( &xLastFlashTime, xFlashRate );
 154              		.loc 1 154 0 discriminator 1
 155 0066 07F10C03 		add	r3, r7, #12
 156 006a 1846     		mov	r0, r3
 157 006c 3969     		ldr	r1, [r7, #16]
 158 006e FFF7FEFF 		bl	vTaskDelayUntil
 155:App/Common/Minimal/flash.c **** 		vParTestToggleLED( uxLED );
 159              		.loc 1 155 0 discriminator 1
 160 0072 7869     		ldr	r0, [r7, #20]
 161 0074 FFF7FEFF 		bl	vParTestToggleLED
 156:App/Common/Minimal/flash.c **** 	}
 162              		.loc 1 156 0 discriminator 1
 163 0078 ECE7     		b	.L5
 164              		.cfi_endproc
 165              	.LFE111:
 167 007a 00BF     		.text
 168              	.Letext0:
 169              		.file 2 "/home/thanhtruong/embedded-development/toolchain/gcc-arm-none-eabi-4_7-2013q1/bin/../lib/
 170              		.file 3 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 171              		.file 4 "Source/include/task.h"
 172              		.file 5 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 flash.c
     /tmp/ccZ9gITI.s:20     .bss.uxFlashTaskNumber:00000000 $d
     /tmp/ccZ9gITI.s:23     .bss.uxFlashTaskNumber:00000000 uxFlashTaskNumber
     /tmp/ccZ9gITI.s:26     .rodata:00000000 $d
     /tmp/ccZ9gITI.s:27     .rodata:00000000 .LC0
     /tmp/ccZ9gITI.s:30     .text.vStartLEDFlashTasks:00000000 $t
     /tmp/ccZ9gITI.s:35     .text.vStartLEDFlashTasks:00000000 vStartLEDFlashTasks
     /tmp/ccZ9gITI.s:96     .text.vLEDFlashTask:00000000 vLEDFlashTask
     /tmp/ccZ9gITI.s:92     .text.vLEDFlashTask:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
xTaskGenericCreate
vPortEnterCritical
vPortExitCritical
xTaskGetTickCount
vTaskDelayUntil
vParTestToggleLED
